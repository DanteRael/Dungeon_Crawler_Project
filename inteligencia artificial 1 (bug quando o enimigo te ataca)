#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <Windows.h>
#include <time.h>
#include <locale.h>
#include <unistd.h>
#define TAM2 30

void moverMonstro(char mapa[TAM2][TAM2], int* monstro_i, int* monstro_j) {
    int movimento_monstro = rand() % 4;  // Gera um número aleatório entre 0 e 3
    int nova_i = *monstro_i;
    int nova_j = *monstro_j;

    switch (movimento_monstro) {
        case 0:  // Mover para cima
            nova_i--;
            break;
        case 1:  // Mover para baixo
            nova_i++;
            break;
        case 2:  // Mover para esquerda
            nova_j--;
            break;
        case 3:  // Mover para direita
            nova_j++;
            break;
    }

    // Verificar se o movimento do monstro é válido
    if (mapa[nova_i][nova_j] == ' ' || mapa[nova_i][nova_j] == '&') {
        mapa[*monstro_i][*monstro_j] = ' ';  // Apagar a posição anterior do monstro
        *monstro_i = nova_i;
        *monstro_j = nova_j;
        mapa[*monstro_i][*monstro_j] = '¬';  // Atualizar a nova posição do monstro
    }
    
    
}

int main() {
    int maximo2 = 30;
    int minimo = 0;

    char escolha;
    char auxiliar;
    char auxiliar2;
    int i, j;
    int vidas = 3;

    char mapa[TAM2][TAM2] = {
        {'*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*','*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*'},
        {'*', 'O', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ',' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', '*'},
        {'*', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ',' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', '*'},
        {'*', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', '*', ' ', '#', '*', ' ',' ', '*', '#', ' ', '*', '*', '*', '*', ' ', '*', ' ', ' ', '*', ' ', '*'},
        {'*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '#', '*', ' ',' ', '*', '#', ' ', '*', ' ', '@', '*', ' ', '#', ' ', ' ', '*', ' ', '*'},
        {'*', ' ', '=', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '#', '*', ' ',' ', '*', '#', ' ', '*', ' ', '*', '*', ' ', '#', ' ', ' ', '*', ' ', '*'},
        {'*', ' ', '*', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '#', '*', ' ',' ', '*', '#', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', '*'},
        {'*', '@', '#', '*', ' ', ' ', '*', ' ', ' ', '*', ' ', ' ', '#', '*', ' ',' ', '*', '#', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '#', '#', '*', ' ',' ', '*', '#', '#', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '#', '*', ' ', ' ',' ', ' ', '*', '#', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '#', '*', ' ', ' ',' ', ' ', '*', '#', ' ', '*', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', '#', '*', ' ', ' ',' ', ' ', '*', '#', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', ' ', '*', ' ', ' ', '*', ' ', ' ', '*', ' ', '#', '*', ' ', ' ', ' ',' ', ' ', ' ', '*', '#', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'},
        {'*', ' ', '*', ' ', ' ', '*', ' ', ' ', '*', ' ', '#', '*', ' ', ' ', ' ',' ', ' ', ' ', '*', '#', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'},
        {'*', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '#', '*', ' ', ' ', '*','*', ' ', ' ', '*', '#', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', '*', '*'},
        {'*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', '#', '*', ' ', ' ', '*','*', ' ', ' ', '*', '#', ' ', '*', ' ', ' ', '#', ' ', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', '#', '*', ' ', ' ', ' ',' ', ' ', ' ', '*', '#', ' ', '*', ' ', ' ', '#', '*', '*', '*', '*', '*'},
        {'*', ' ', ' ', '*', ' ', ' ', '*', ' ', '*', ' ', '#', '*', ' ', ' ', ' ',' ', ' ', ' ', '*', '#', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', '#', '*', ' ', ' ',' ', ' ', '*', '#', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', '*', '*', '*', ' ', ' ', '*', ' ', ' ', '#', '*', ' ', ' ',' ', ' ', '*', '#', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', ' ',' ', ' ', '*', '#', ' ', '*', ' ', ' ', '*', '*', '*', '*', '*', '*', '*'},
        {'*', '#', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', '#', '*', ' ',' ', '*', '#', ' ', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', '#', '*', ' ',' ', '*', '#', ' ', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', '*', ' ', '#', '*', ' ',' ', '*', '#', ' ', '*', '*', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', '#', '*', ' ',' ', '*', '#', ' ', '*', ' ', ' ', ' ', 'D', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', '*', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '#', '*', ' ',' ', '*', '#', ' ', '*', ' ', ' ', ' ', 'D', ' ', ' ', '@', ' ', ' ', '*'},
        {'*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '#', '*', ' ',' ', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ',' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*'}, //Linha onde a gente nasce mapa[27][2]
        {'*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ',' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*'},
        {'*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*','*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*'},
    };
	// Posição inicial do jogador
	i = 27;
    j = 2;
    mapa[i][j] = '&';
	
    // Posição inicial do monstro
    int monstro_i = 5;
    int monstro_j = 1;
    mapa[monstro_i][monstro_j] = '¬';
    
    if (monstro_i == i && monstro_j == j) {
        vidas--;
        printf("Voce foi pego pelo monstro! Vidas restantes: %d\n", vidas);
        if (vidas > 0) {
            // Reposicionar o jogador após a colisão
            mapa[i][j] = ' ';
            i = 27;
            j = 2;
            mapa[i][j] = '&';
        }
    } else {
        moverMonstro(mapa, &monstro_i, &monstro_j);
    }

    system("cls");
    
     // Imprimir o mapa
        for (i = minimo; i < maximo2; i++) {
            for (j = minimo; j < maximo2; j++) {
                printf("%c ", mapa[i][j]);
            }
            printf("\n");
        }

    while (1) {
    	
    	

        escolha = getch();

        // Lógica para movimentação do jogador
        
        if(escolha == 'i')
{
	if(mapa[1][1] == '&')
	{
		mapa[13][14] = '#';
		mapa[13][15] = '#';
		mapa[16][14] = '#';
		mapa[16][15] = '#';
		
		mapa[16][25] = ' ';
		mapa[16][26] = ' ';
		mapa[16][27] = ' ';
		mapa[16][28] = ' ';
	}
	
    if(mapa[4][21] == '&')
    {
        mapa[24][23] = ' ';
        mapa[25][23] = ' ';
        mapa[23][24] = '=';
        mapa[26][24] = '=';
    }
    else if(mapa[25][26] == '&')
    {
        system("cls");
        printf("Fase 2 concluida!!!\n\n");
        sleep(1);
        system("pause");
        system("cls");
        printf("Iniciando Fase 3.\n\n");
        sleep(1);
        system("pause");
        system("cls");
        break;
    }
    else
    {
        continue;
    }
}
		
		if(escolha == 'w')
		{
			for(i = minimo; i < maximo2; i++)
			{
				for(j = minimo; j < maximo2; j++)
				{
					if(mapa[i][j] == '&')
					{
						if(mapa[i-1][j] == '*' || mapa[i-1][j] == 'D' || mapa[i-1][j] == '=')
						{
							continue;
						}
						else if(mapa[i-1][j] == '#')
						{
							vidas--;
							mapa[i][j] = ' ';
							i = 27;
   							j = 2;
    						mapa[i][j] = '&';
							
						}
						//Verificar se o monstro colidiu com o jogador
						else if(mapa[monstro_i-1][monstro_j] == '&')
						{
							mapa[i][j] = ' ';
							mapa[monstro_i][monstro_j] = mapa[i][j];
							i=27;
							j=2;
							mapa[i][j] = '&';
							
						}
						// Verificar se o jogador colidiu com o monstro
        				else if(mapa[i-1][j] == '¬') 
						{
           				 vidas--;
           				 	// Redefinir posição do jogador
           				 	mapa[i][j] = ' ';
            				i = 27;
           					j = 2;
           					mapa[i][j] = '&';
        				}
						else if(mapa[i-1][j] == '@')
						{
							auxiliar2 = mapa[i-1][j];
							mapa[i-1][j] = ' ';
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i-1][j];
							mapa[i-1][j] = auxiliar;
						}
						else if(auxiliar2 == '@')
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = auxiliar2;
							mapa[i-1][j] = auxiliar;
							auxiliar2 = ' ';
						} else if(mapa[i-1][j] == 'O')
						{
							auxiliar2 = mapa[i-1][j];
							mapa[i-1][j] = ' ';
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i-1][j];
							mapa[i-1][j] = auxiliar;
						}
						else if(auxiliar2 == 'O')
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = auxiliar2;
							mapa[i-1][j] = auxiliar;
							auxiliar2 = ' ';
						}
						else
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i-1][j];
							mapa[i-1][j] = auxiliar;
						}
					}
				}
			}
		}

		if(escolha == 'a')
		{
			for(i = minimo; i < maximo2; i++)
			{
				for(j = minimo; j < maximo2; j++)
				{
					if(mapa[i][j] == '&')
					{
						if(mapa[i][j-1] == '*' || mapa[i][j-1] == 'D' || mapa[i][j-1] == '=')
						{
							continue;
						}
						else if(mapa[i][j-1] == '#')
						{
							vidas--;
							mapa[i][j] = ' ';
							i = 27;
   							j = 2;
    						mapa[i][j] = '&';
						}
						//Verificar se o monstro colidiu com o jogador
						else if(mapa[monstro_i][monstro_j-1] == '&')
						{
							mapa[i][j] = ' ';
							mapa[monstro_i][monstro_j] = mapa[i][j];
							i=27;
							j=2;
							mapa[i][j] = '&';
							
						}
						// Verificar se o jogador colidiu com o monstro
						else if(mapa[i][j-1] == '¬') 
						{
           				 vidas--;
           				 
           				 	// Redefinir posição do jogador
           				 	mapa[i][j] = ' ';
            				i = 27;
           					j = 2;
           					mapa[i][j] = '&';
        				}
						else if(mapa[i][j-1] == '@')
						{
							auxiliar2 = mapa[i][j-1];
							mapa[i][j-1] = ' ';
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i][j-1];
							mapa[i][j-1] = auxiliar;
						}
						else if(auxiliar2 == '@')
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = auxiliar2;
							mapa[i][j-1] = auxiliar;
							auxiliar2 = ' ';
						} else if(mapa[i][j-1] == 'O')
						{
							auxiliar2 = mapa[i][j-1];
							mapa[i][j-1] = ' ';
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i][j-1];
							mapa[i][j-1] = auxiliar;
						}
						else if(auxiliar2 == 'O')
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = auxiliar2;
							mapa[i][j-1] = auxiliar;
							auxiliar2 = ' ';
						}
						else
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i][j-1];
							mapa[i][j-1] = auxiliar;
						}
					}
				}
			}
		}
		
		if(escolha == 's')
		{
			for(i = maximo2-1; i > minimo; i--)
			{
				for(j = maximo2-1; j > minimo; j--)
				{
					if(mapa[i][j] == '&')
					{
						if(mapa[i+1][j] == '*' || mapa[i+1][j] == 'D' || mapa[i+1][j] == '=')
						{
							continue;
						}
						else if(mapa[i+1][j] == '#')
						{
							vidas--;
							mapa[i][j] = ' ';
							i = 27;
   							j = 2;
    						mapa[i][j] = '&';
							
						}
						//Verificar se o monstro colidiu com o jogador
						else if(mapa[monstro_i+1][monstro_j] == '&')
						{
							mapa[i][j] = ' ';
							mapa[monstro_i][monstro_j] = mapa[i][j];
							i=27;
							j=2;
							mapa[i][j] = '&';
							
						}
						// Verificar se o jogador colidiu com o monstro
						else if(mapa[i+1][j] == '¬') 
						{
           				 vidas--;
           				 
           				 	// Redefinir posição do jogador
           				 	mapa[i][j] = ' ';
            				i = 27;
           					j = 2;
           					mapa[i][j] = '&';
        				}

						else if(mapa[i+1][j] == '@')
						{
							auxiliar2 = mapa[i+1][j];
							mapa[i+1][j] = ' ';
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i+1][j];
							mapa[i+1][j] = auxiliar;
						}
						else if(auxiliar2 == '@')
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = auxiliar2;
							mapa[i+1][j] = auxiliar;
							auxiliar2 = ' ';
						} else if(mapa[i+1][j] == 'O')
						{
							auxiliar2 = mapa[i+1][j];
							mapa[i+1][j] = ' ';
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i+1][j];
							mapa[i+1][j] = auxiliar;
						}
						else if(auxiliar2 == 'O')
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = auxiliar2;
							mapa[i+1][j] = auxiliar;
							auxiliar2 = ' ';
						}
						else
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i+1][j];
							mapa[i+1][j] = auxiliar;
						}
					}

				}
			}
		}

		
		if(escolha == 'd')
		{
			for(i = maximo2-1; i > minimo; i--)
			{
				for(j = maximo2-1; j > minimo; j--)
				{
					if(mapa[i][j] == '&')
					{
						if(mapa[i][j+1] == '*' || mapa[i][j+1] == 'D' || mapa[i][j+1] == '=')
						{
							continue;
						}
						else if(mapa[i][j+1] == '#')
						{
							vidas--;
							mapa[i][j] = ' ';
							i = 27;
   							j = 2;
    						mapa[i][j] = '&';
						}
						//Verificar se o monstro colidiu com o jogador
						else if(mapa[monstro_i][monstro_j+1] == '&')
						{
							mapa[i][j] = ' ';
							mapa[monstro_i][monstro_j] = mapa[i][j];
							i=27;
							j=2;
							mapa[i][j] = '&';
							
						}
						// Verificar se o jogador colidiu com o monstro
						else if(mapa[i][j+1] == '¬')
						{
           				 vidas--;
           				 
           				 	// Redefinir posição do jogador
           				 	mapa[i][j] = ' ';
            				i = 27;
           					j = 2;
           					mapa[i][j] = '&';
        				}


						else if(mapa[i][j+1] == '@')
						{
							auxiliar2 = mapa[i][j+1];
							mapa[i][j+1] = ' ';
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i][j+1];
							mapa[i][j+1] = auxiliar;
						}
						else if(auxiliar2 == '@')
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = auxiliar2;
							mapa[i][j+1] = auxiliar;
							auxiliar2 = ' ';
						} else if(mapa[i][j+1] == 'O')
						{
							auxiliar2 = mapa[i][j+1];
							mapa[i][j+1] = ' ';
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i][j+1];
							mapa[i][j+1] = auxiliar;
						}
						else if(auxiliar2 == 'O')
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = auxiliar2;
							mapa[i][j+1] = auxiliar;
							auxiliar2 = ' ';
						}
						else
						{
							auxiliar = mapa[i][j];
							mapa[i][j] = mapa[i][j+1];
							mapa[i][j+1] = auxiliar;
						}
					}
				}
			}
		}
		
		system("cls");
		
		for(i = minimo; i < maximo2; i++)
		{
			for(j = minimo; j < maximo2; j++)
			{
				printf("%c ", mapa[i][j]);
			}
			printf("\n");
		}
		
		for(i = minimo; i < maximo2; i++)
		{
			for(j = minimo; j < maximo2; j++)
			{
				if(mapa[i][j] == '&')
				{
					printf("\n%d %d\n\n", i, j);
				}
			}
		}
		
		if(auxiliar2 == '@')
		{
			printf("auxiliar2 = '@'\n\n");
		}
		else
		{
			printf("auxiliar2 = ' '\n\n");
		}
		
		if(auxiliar2 == 'O')
		{
			printf("auxiliar2 = '@'\n\n");
		}
		else
		{
			printf("auxiliar2 = ' '\n\n");
		}

        // Lógica para movimentação do monstro
        moverMonstro(mapa, &monstro_i, &monstro_j);

        // Verificar se o jogador colidiu com o monstro
        if (monstro_i == i && monstro_j == j) {
            vidas--;
            // Redefinir posição do jogador
            i = 27;
            j = 2;
            mapa[i][j] = '&';
        }

        // Verificar outras interações do jogador (como pegar objetos, etc.)
    }

    return 0;
}
